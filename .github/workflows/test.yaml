name: Test

on:
  workflow_call:

env:
  FLAGSMITH_SERVER_KEY: ${{ secrets.FLAGSMITH_SERVER_KEY }}
jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Check formatting
        run: npm run format

      - name: Lint
        run: npm run lint

      - name: Check type errors
        run: npm run typecheck

      - name: Build Project
        run: npm run build

      - name: Upload Build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: app-build/

      - name: Run Unit Tests
        run: npm run test

      - name: Upload Unit Tests artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Store Playwright version
        run: |
          PLAYWRIGHT_VERSION=$(npm ls @playwright/test | grep @playwright | grep -v "deduped" | sed 's/.*@//')
          echo "Playwright version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        id: cache-playwright
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Run E2E Tests
        run: npm run test:e2e

      - name: Upload E2E Tests artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/

      - name: Send custom JSON data to Slack workflow
        uses: slackapi/slack-github-action@v1.27.0
        if: failure()
        with:
          payload: |
            {
                "blocks": [
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "ðŸ›‘ *<https://github.com/${{github.repository}}/actions/runs/${{ github.run_id }}|${{ github.workflow }} workflow run>* failed."
                        }
                    }
                ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
